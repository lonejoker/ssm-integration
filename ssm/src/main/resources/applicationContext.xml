<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 扫描包 -->
	<context:component-scan base-package="com.xiaobai" use-default-filters="true">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 配置jdbc -->
	<!-- 引入外部配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- mybatis整合：SqlSessionFactoryBean类可以完成对应数据库操作工厂的创建 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
		<!-- 配置连接池到工厂 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置mybatis核心配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- mybatis映射文件 -->
		<!--<property name="mapperLocations" value="classpath:mappers/*.xml"></property>-->
	</bean>

	<!-- 通过mapper配置生成的代理类对象由spring框架管理 -->
	<!-- mapper映射的扫描类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描包的结构 -->
		<property name="basePackage" value="com.xiaobai.mapper"></property>
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 事务通知 -->
	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- rollback-for：异常类型 -->
			<tx:method name="*" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置aop切面切点 -->
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.xiaobai.service.*.*(..))"/>
		<aop:advisor advice-ref="advice" pointcut-ref="pc"/>
	</aop:config>


</beans>